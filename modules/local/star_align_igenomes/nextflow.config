process {
    withName: '.*:ALIGN_STAR:STAR_ALIGN_IGENOMES' {
        ext.args   = [  "--quantMode TranscriptomeSAM",
                        "--twopassMode Basic",
                        "--readFilesCommand zcat",
                        "--runRNGseed 42",
                        "--outFilterMultimapNmax 20",
                        "--alignSJDBoverhangMin 1",
                        "--outSAMattributes NH HI AS NM MD",
                        "--outSAMstrandField intronMotif",
                        '--outSAMunmapped Within KeepPairs',
                        "--quantTranscriptomeBan Singleend",
                        "${(params.save_unaligned || params.contaminant_screening) ? '--outReadsUnmapped Fastx' : ''}",
                        "${params.allele_specific_expression ? '--outFilterMultimapNmax 40' : '--outFilterMultimapNmax 20'}",
                        "${params.extra_star_align_args ?: ''}"
                     ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/${params.aligner}/log" },
                mode: params.publish_dir_mode,
                pattern: '*.{out,tab}'
            ],
            [
                path: { params.save_align_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir },
                mode: params.publish_dir_mode,
                pattern: '*.bam',
                saveAs: { params.save_align_intermeds ? it : null }
            ],
            [
                path: { params.save_unaligned ? "${params.outdir}/${params.aligner}/unmapped" : params.outdir },
                mode: params.publish_dir_mode,
                pattern: '*.fastq.gz',
                saveAs: { params.save_unaligned ? it : null }
            ]
        ]
    }


    withName: 'STAR_JUNCTION_DISCOVERY' {
        ext.args   = [
            '--outSAMtype BAM Unsorted',
            '--sjdbOverhang 149',
            '--outSAMunmapped Within',
            '--readFilesCommand zcat',
            '--runRNGseed 42',
            '--outMultimapperOrder Random',
            '--outFilterMultimapNmax 40',
            '--alignSJDBoverhangMin 1',
            '--alignSJoverhangMin 8',
            '--alignIntronMax 1000000',
            '--alignMatesGapMax 1000000',
            '--outSAMattributes NH HI AS NM MD',
            '--quantTranscriptomeBan Singleend',
            "${params.use_personalized_references ?: '--outSJfilterCountUniqueMin 0 0 0 0'}", // diploid genome = many valid non-unique reads
            "${params.save_unaligned ?: '--outReadsUnmapped Fastx'}",
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/${params.aligner}/log" },
                mode: params.publish_dir_mode,
                pattern: '*.{out,tab}'
            ],
            [
                path: { "${params.outdir}/${params.aligner}" },
                mode: params.publish_dir_mode,
                pattern: '*.bam',
                enabled: params.save_align_intermeds
            ],
            [
                path: { "${params.outdir}/${params.aligner}/unmapped" },
                mode: params.publish_dir_mode,
                pattern: '*.fastq.gz',
                enabled: params.save_unaligned
            ]
        ]
    }
    withName: 'STAR_ALIGN_REMAPPING' {
        ext.args   = [
            '--outSAMtype BAM Unsorted',
            '--outSAMunmapped Within',
            '--sjdbOverhang 149',
            '--readFilesCommand zcat',
            '--runRNGseed 42',
            '--outMultimapperOrder Random',
            '--outFilterMultimapNmax 40',
            '--alignSJDBoverhangMin 1',
            '--alignSJoverhangMin 8',
            '--alignIntronMax 1000000',
            '--alignMatesGapMax 1000000',
            '--outSAMattributes NH HI AS NM MD',
            '--quantTranscriptomeBan Singleend',
            '--outSAMstrandField intronMotif',
            "${params.save_unaligned ? '--outReadsUnmapped Fastx' : ''}"
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/${params.aligner}/log" },
                mode: params.publish_dir_mode,
                pattern: '*.{out,tab}'
            ],
            [
                path: { "${params.outdir}/${params.aligner}" },
                mode: params.publish_dir_mode,
                pattern: '*.bam',
                enabled: params.save_align_intermeds
            ],
            [
                path: { "${params.outdir}/${params.aligner}/unmapped" },
                mode: params.publish_dir_mode,
                pattern: '*.fastq.gz',
                enabled: params.save_unaligned
            ]
        ]
    }
}
